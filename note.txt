npm install --save express
npm install --save body-parser // use /student/:id call with res.params.id

const express = require('express')// ได้ function มา 
const bodyParser = require('body-parser')
const app = express() // ถ้าจะให้ function ที่เอามา ต้องใส่ วงเล็บตามหลัง()

app.use(bodyParser.urlencoded({ extended : false }))
app.use(bodyParser.json())

ข้อมูล Api เวลาเรียกข้อมูลต้องถูกต้องครบถ้วน

การครบถ้วนต้อง มี id name email เรียกว่า โครงสร้างข้อมูลที่ถูกต้อง

design by contack เวลาเราจะใช้ของๆ ใครเราต้องรู้ spect 
แต่การที่เราจะรู้อะไรต้องออกแบบของก่อน เรียกใช้ spect เราต้อง
กำหนดข้อตกลงว่า เรียกแบบนี้จะได้แบบนี้ เราเรียกต้องได้ข้อมูลที่ถูกต้องตามที่ตกลง
เราต้อง มี Design by contack ได้ ต่างคนก็ต่าง test โปรแกรมตัวเองได้

ถ้าเรามอง ใน มุม ของ functionnal nonfunctional 
เราจะควบคุมไม่ได้เลยคือ ข้อมูล ควบคุมไม่ได้ ก็ testไม่ได้ จะไม่เหมือน mock เราควบคุม result ได้

เราก็ต้องเช็คโครสร้างแทน เช่น ถ้ามันต้อง return เป็น list แม้ DB จะไม่มีข้อมูล เราก็ ต้อง return เป็น list เป็นต้น
หรือ ถ้า เลขบัตร ประชาชน มี 13 หลักเสมอ ต้องเช็คความยาว 
หรือ เราอาจจะต้องเช็คว่า ฟิลที่มัน require มันมีข้อมูลใหม
หรือ เราต้องการใช้ fullname แต่ API ส่ง fname มาแทนหรือป่าว

แต่การที่ข้อมูลผิดพลาด getstudent ได้ ชื่อหมามา เราไม่ได้ผิด มันผิดที่ข้อมูล

สรุป เราไม่สามารถ เอาความรู้ ในการ Unit Test ทั้งหมดมาใช้เวลาทำงานจริงได้

ใน 3เหลี่ยมการ Test unit test จะเยอะสุด แต่เร็วสุดเพราะ มันเขียนเสร็จ service ก็ mock ได้เลย

intigation test เราจะควบคุมไม่ได้แล้ว เพราะ เราต้อง ต่อ service คนอื่น เราควบคุมไม่ได้ จะช้า แต่ เขียนน้องลง บางทีก็ช้าเป็นวัน กว่าจะรู้ว่า
software เราใช้ไม่ได้ก็สายไปแล้ว เราก็ควร test เท่าที่จำเป็น ไม่ควรวุ่นเวอ มาก เพราะบางอย่างมันก็ testไม่ได้ 
